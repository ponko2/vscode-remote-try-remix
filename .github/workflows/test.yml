name: Test
on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch: {}
permissions: {}
jobs:
  required:
    name: "Required Checks: Test"
    if: always()
    needs:
      - build
      - commitlint
      - editorconfig
      - eslint
      - prettier
      - prisma
      - test
      - typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Determine status
        id: status
        run: |
          results=$(tr -d '\n' <<< '${{ toJSON(needs.*.result) }}')
          if ! grep -q -v -E '(failure|cancelled)' <<< "$results"; then
            result="failed"
          else
            result="success"
          fi
          {
            echo "result=${result}"
            echo "results=${results}"
          } | tee -a "$GITHUB_OUTPUT"
      - name: Check for failed status
        if: always() && steps.status.outputs.result != 'success'
        run: |
          echo "One or more required build workflows failed: ${{ steps.status.outputs.results }}"
          exit 1
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run generate
      - run: pnpm run build
  commitlint:
    name: commitlint
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Validate all commits from PR
        run: >-
          pnpm exec commitlint
          --from ${{ github.event.pull_request.base.sha }}
          --to ${{ github.event.pull_request.head.sha }}
          --verbose
  editorconfig:
    name: EditorConfig
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: editorconfig-checker/action-editorconfig-checker@0ab3427a3f09b17c21d489172245be511e0a16ea # v2.0.0
      - run: editorconfig-checker
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run generate
      - run: pnpm exec react-router typegen
      - uses: reviewdog/action-eslint@2fee6dd72a5419ff4113f694e2068d2a03bb35dd # v1.33.2
        with:
          fail_level: error
          filter_mode: nofilter
          reporter: github-pr-annotations
          tool_name: ESLint
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm exec prettier --write .
      - uses: reviewdog/action-setup@e04ffabe3898a0af8d0fb1af00c188831c4b5893 # v1.3.2
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TMPFILE=$(mktemp)
          git diff >"${TMPFILE}"
          { git stash -u && git stash drop; } || true
          reviewdog -f=diff -fail-level=error -filter-mode=nofilter -name=Prettier -reporter=github-pr-annotations <"${TMPFILE}"
  prisma:
    name: Prisma
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm exec prisma format
      - run: pnpm exec prisma-case-format --file prisma/schema.prisma
      - uses: reviewdog/action-setup@e04ffabe3898a0af8d0fb1af00c188831c4b5893 # v1.3.2
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TMPFILE=$(mktemp)
          git diff >"${TMPFILE}"
          { git stash -u && git stash drop; } || true
          reviewdog -f=diff -fail-level=error -filter-mode=nofilter -name=Prisma -reporter=github-pr-annotations <"${TMPFILE}"
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run generate
      - run: pnpm test
      - name: Get installed playwright version
        id: playwright-version
        run: echo "version=$(pnpm list --depth 0 --json playwright | jq -r '.[0].devDependencies.playwright.version')" >> "$GITHUB_OUTPUT"
      - name: Cache playwright
        id: playwright-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
      - name: Install playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - run: pnpm run build-storybook
      - run: >-
          pnpm dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue"
          "pnpm dlx http-server storybook-static --port 6006 --silent"
          "pnpm dlx wait-on http://127.0.0.1:6006 && pnpm run test-storybook -- --url=http://127.0.0.1:6006"
  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run generate
      - run: pnpm run typecheck
